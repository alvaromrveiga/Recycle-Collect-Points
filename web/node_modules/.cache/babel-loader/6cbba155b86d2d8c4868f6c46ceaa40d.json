{"ast":null,"code":"var _jsxFileName = \"/home/alvaro/git/ecoleta-nlw/web/src/components/Dropzone/index.tsx\";\nimport React, { useCallback, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { FiUpload } from 'react-icons/fi';\nimport './styles.css';\n\nconst Dropzone = () => {\n  const [selectedFileUrl, setSelectedFileUrl] = useState('');\n  const onDrop = useCallback(acceptedFiles => {\n    const file = acceptedFiles[0];\n    setSelectedFileUrl(file);\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    accept: 'image/*'\n  });\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: \"dropzone\"\n  }, getRootProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    accept: \"image/*\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  })), isDragActive ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }, \"Solte a imagem do estabelecimento aqui\") : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FiUpload, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 25\n    }\n  }), \"Solte a imagem do estabelecimento aqui ou clique para selecionar\"));\n};\n\nexport default Dropzone;","map":{"version":3,"sources":["/home/alvaro/git/ecoleta-nlw/web/src/components/Dropzone/index.tsx"],"names":["React","useCallback","useState","useDropzone","FiUpload","Dropzone","selectedFileUrl","setSelectedFileUrl","onDrop","acceptedFiles","file","getRootProps","getInputProps","isDragActive","accept"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,QAAT,QAAyB,gBAAzB;AAEA,OAAO,cAAP;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACnB,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCL,QAAQ,CAAC,EAAD,CAAtD;AAEA,QAAMM,MAAM,GAAGP,WAAW,CAACQ,aAAa,IAAI;AACxC,UAAMC,IAAI,GAAGD,aAAa,CAAC,CAAD,CAA1B;AAEAF,IAAAA,kBAAkB,CAACG,IAAD,CAAlB;AACH,GAJyB,EAIvB,EAJuB,CAA1B;AAKA,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,aAAhB;AAA+BC,IAAAA;AAA/B,MAAgDV,WAAW,CAAC;AAC9DK,IAAAA,MAD8D;AAE9DM,IAAAA,MAAM,EAAE;AAFsD,GAAD,CAAjE;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC;AAAf,KAA8BH,YAAY,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACI,+CAAWC,aAAa,EAAxB;AAA4B,IAAA,MAAM,EAAC,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,EAGQC,YAAY,gBACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CADQ,gBAGR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,qEANZ,CADJ;AAcH,CA3BD;;AA6BA,eAAeR,QAAf","sourcesContent":["import React, { useCallback, useState } from 'react'\nimport { useDropzone } from 'react-dropzone'\nimport { FiUpload } from 'react-icons/fi'\n\nimport './styles.css';\n\nconst Dropzone = () => {\n    const [selectedFileUrl, setSelectedFileUrl] = useState('');\n\n    const onDrop = useCallback(acceptedFiles => {\n        const file = acceptedFiles[0];\n\n        setSelectedFileUrl(file);\n    }, [])\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({\n        onDrop,\n        accept: 'image/*'\n    })\n\n    return (\n        <div className='dropzone' {...getRootProps()}>\n            <input {...getInputProps()} accept='image/*' />\n            {\n                isDragActive ?\n                    <p>Solte a imagem do estabelecimento aqui</p>\n                    :\n                    <p>\n                        <FiUpload />\n                        Solte a imagem do estabelecimento aqui ou clique para selecionar\n                    </p>\n            }\n        </div>\n    )\n}\n\nexport default Dropzone;"]},"metadata":{},"sourceType":"module"}
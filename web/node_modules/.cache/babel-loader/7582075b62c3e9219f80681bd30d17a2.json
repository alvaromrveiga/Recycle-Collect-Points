{"ast":null,"code":"var _jsxFileName = \"/home/alvaro/git/ecoleta-nlw/web/src/pages/CreatePoint/index.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Map, TileLayer, Marker } from 'react-leaflet';\nimport api from '../../services/api';\nimport axios from 'axios';\nimport Dropzone from '../../components/Dropzone';\nimport './styles.css';\nimport logo from \"../../assets/logo.svg\";\nimport { FiArrowLeft } from 'react-icons/fi';\n\nconst CreatePoint = () => {\n  //array ou objecto: manualmente informar o tipo da variável\n  const [itens, setItens] = useState([]);\n  const [ufs, setUfs] = useState([]); //array de objetos\n\n  const [cities, setCities] = useState([]);\n  const [initialPosition, setInitialPosition] = useState([0, 0]);\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    whatsapp: '',\n    address: ''\n  });\n  const [selectedUf, setSelectedUF] = useState('0');\n  const [selectedCity, setSelectedCity] = useState('0');\n  const [selectedPosition, setSelectedPosition] = useState([0, 0]);\n  const [selectedItens, setSelectedItens] = useState([]);\n  const [selectedFile, setSelectedFile] = useState();\n  const history = useHistory();\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setInitialPosition([latitude, longitude]);\n    }, () => setInitialPosition([-15.8259668, -47.9276436]), {\n      timeout: 10000\n    });\n  }, []); //quando o array [] está vazio, a função só é executada uma vez, não importa quantas vezes CreatePoint é chamado\n\n  useEffect(() => {\n    api.get('itens').then(response => {\n      setItens(response.data);\n    });\n  }, []);\n  useEffect(() => {\n    axios.get('https://servicodados.ibge.gov.br/api/v1/localidades/estados?orderBy=nome').then(response => {\n      const ufNames = response.data.map(uf => uf.sigla);\n      setUfs(ufNames);\n    });\n  }, []);\n  useEffect(() => {\n    //carrega as cidades sempre que a UF mudar\n    if (selectedUf === '0') {\n      return;\n    }\n\n    axios.get(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUf}/municipios?orderBy=nome`).then(response => {\n      const cityNames = response.data.map(city => city.nome);\n      setCities(cityNames);\n    });\n  }, [selectedUf]);\n\n  function handleSelectUf(event) {\n    const uf = event.target.value;\n    setSelectedUF(uf);\n  }\n\n  function handleSelectCity(event) {\n    const city = event.target.value;\n    setSelectedCity(city);\n  }\n\n  function handleMapClick(event) {\n    setSelectedPosition([event.latlng.lat, event.latlng.lng]);\n  }\n\n  function handleInputChange(event) {\n    const {\n      name,\n      value\n    } = event.target; //colchete porque ai pode usar o nome de uma variável como propriedade, não com a variaável em si\n    //dessa forma copia todo o objeto e altera só o campo passado com o valor\n    //name pode ser whatsapp, address... por causa dos colchetes\n\n    setFormData({ ...formData,\n      [name]: value\n    });\n  }\n\n  function handleSelectItem(id) {\n    const alreadySelected = selectedItens.findIndex(item => item === id); //se encontrar retorna a posição, se não retorna -1\n\n    if (alreadySelected >= 0) {\n      const filteredItens = selectedItens.filter(item => item !== id); //pega todos menos o id\n\n      setSelectedItens(filteredItens);\n    } else {\n      setSelectedItens([...selectedItens, id]);\n    }\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const {\n      name,\n      email,\n      whatsapp,\n      address\n    } = formData;\n    const uf = selectedUf;\n    const city = selectedCity;\n    const [latitude, longitude] = selectedPosition;\n    const itens = selectedItens;\n    const data = new FormData();\n    data.append('name', name);\n    data.append('email', email);\n    data.append('whatsapp', whatsapp);\n    data.append('address', address);\n    data.append('uf', uf);\n    data.append('city', city);\n    data.append('latitude', String(latitude));\n    data.append('longitude', String(longitude));\n    data.append('itens', itens.join(','));\n    await api.post('points', data);\n    alert('Ponto de coleta criado!');\n    history.push('/'); //volta pra home page\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"page-create-point\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"Ecoleta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: '/',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FiArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 21\n    }\n  }), \"Voltar para home\")), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, \"Cadastro do \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 33\n    }\n  }), \" ponto de coleta\"), /*#__PURE__*/React.createElement(Dropzone, {\n    onFileUploaded: setSelectedFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 25\n    }\n  }, \"Dados\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 25\n    }\n  }, \"Nome da entidade\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    id: \"name\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 29\n    }\n  }, \"E-mail:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"whatsapp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 29\n    }\n  }, \"Whatsapp\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"whatsapp\",\n    id: \"whatsapp\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 25\n    }\n  }, \"Endere\\xE7os\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 25\n    }\n  }, \"Selecione o endere\\xE7o no mapa\")), /*#__PURE__*/React.createElement(Map, {\n    center: initialPosition,\n    zoom: 11,\n    onClick: handleMapClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TileLayer, {\n    attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Marker, {\n    position: selectedPosition,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 25\n    }\n  }, \"Endere\\xE7o\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"address\",\n    id: \"address\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"uf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 29\n    }\n  }, \"Estado (UF)\"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: handleSelectUf,\n    value: selectedUf,\n    name: \"uf\",\n    id: \"uf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 33\n    }\n  }, \"Selecione uma UF\"), ufs.map(uf => /*#__PURE__*/React.createElement(\"option\", {\n    key: uf,\n    value: uf,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 37\n    }\n  }, uf)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 29\n    }\n  }, \"Cidade\"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: handleSelectCity,\n    value: selectedCity,\n    name: \"city\",\n    id: \"city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 33\n    }\n  }, \"Selecione a cidade\"), cities.map(city => /*#__PURE__*/React.createElement(\"option\", {\n    key: city,\n    value: city,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 37\n    }\n  }, city)))))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 25\n    }\n  }, \"\\xCDtens de coleta\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 25\n    }\n  }, \"Selecione um ou mais itens abaixo\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"items-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 21\n    }\n  }, itens.map(item => /*#__PURE__*/React.createElement(\"li\", {\n    key: item.id,\n    onClick: () => handleSelectItem(item.id),\n    className: selectedItens.includes(item.id) ? 'selected' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: api.defaults.baseURL + item.image_url,\n    alt: item.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 33\n    }\n  }, item.title))))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 17\n    }\n  }, \"Cadastrar ponto de coleta\")));\n};\n\nexport default CreatePoint;","map":{"version":3,"sources":["/home/alvaro/git/ecoleta-nlw/web/src/pages/CreatePoint/index.tsx"],"names":["React","useEffect","useState","Link","useHistory","Map","TileLayer","Marker","api","axios","Dropzone","FiArrowLeft","CreatePoint","itens","setItens","ufs","setUfs","cities","setCities","initialPosition","setInitialPosition","formData","setFormData","name","email","whatsapp","address","selectedUf","setSelectedUF","selectedCity","setSelectedCity","selectedPosition","setSelectedPosition","selectedItens","setSelectedItens","selectedFile","setSelectedFile","history","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","timeout","get","then","response","data","ufNames","map","uf","sigla","cityNames","city","nome","handleSelectUf","event","target","value","handleSelectCity","handleMapClick","latlng","lat","lng","handleInputChange","handleSelectItem","id","alreadySelected","findIndex","item","filteredItens","filter","handleSubmit","preventDefault","FormData","append","String","join","post","alert","push","logo","includes","defaults","baseURL","image_url","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAAmE,OAAnE;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,MAAzB,QAAuC,eAAvC;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,QAAP,MAAqB,2BAArB;AAEA,OAAO,cAAP;;AAEA,SAASC,WAAT,QAA4B,gBAA5B;;AAgBA,MAAMC,WAAW,GAAG,MAAM;AACtB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAS,EAAT,CAAlC;AACA,QAAM,CAACa,GAAD,EAAMC,MAAN,IAAgBd,QAAQ,CAAW,EAAX,CAA9B,CAHsB,CAGwB;;AAC9C,QAAM,CAACe,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAW,EAAX,CAApC;AAEA,QAAM,CAACiB,eAAD,EAAkBC,kBAAlB,IAAwClB,QAAQ,CAAmB,CAAC,CAAD,EAAI,CAAJ,CAAnB,CAAtD;AAEA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC;AACrCqB,IAAAA,IAAI,EAAE,EAD+B;AAErCC,IAAAA,KAAK,EAAE,EAF8B;AAGrCC,IAAAA,QAAQ,EAAE,EAH2B;AAIrCC,IAAAA,OAAO,EAAE;AAJ4B,GAAD,CAAxC;AAOA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8B1B,QAAQ,CAAS,GAAT,CAA5C;AACA,QAAM,CAAC2B,YAAD,EAAeC,eAAf,IAAkC5B,QAAQ,CAAS,GAAT,CAAhD;AACA,QAAM,CAAC6B,gBAAD,EAAmBC,mBAAnB,IAA0C9B,QAAQ,CAAmB,CAAC,CAAD,EAAI,CAAJ,CAAnB,CAAxD;AACA,QAAM,CAAC+B,aAAD,EAAgBC,gBAAhB,IAAoChC,QAAQ,CAAW,EAAX,CAAlD;AACA,QAAM,CAACiC,YAAD,EAAeC,eAAf,IAAkClC,QAAQ,EAAhD;AAEA,QAAMmC,OAAO,GAAGjC,UAAU,EAA1B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZqC,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0CC,QAAQ,IAAI;AAClD,YAAM;AAAEC,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,UAA0BF,QAAQ,CAACG,MAAzC;AAEAxB,MAAAA,kBAAkB,CAAC,CAACsB,QAAD,EAAWC,SAAX,CAAD,CAAlB;AACH,KAJD,EAII,MAAMvB,kBAAkB,CAAC,CAAC,CAAC,UAAF,EAAc,CAAC,UAAf,CAAD,CAJ5B,EAI0D;AAAEyB,MAAAA,OAAO,EAAE;AAAX,KAJ1D;AAKH,GANQ,EAMN,EANM,CAAT,CAvBsB,CA+BtB;;AACA5C,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,GAAG,CAACsC,GAAJ,CAAQ,OAAR,EAAiBC,IAAjB,CAAsBC,QAAQ,IAAI;AAC9BlC,MAAAA,QAAQ,CAACkC,QAAQ,CAACC,IAAV,CAAR;AACH,KAFD;AAGH,GAJQ,EAIN,EAJM,CAAT;AAMAhD,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,KAAK,CACAqC,GADL,CAC6B,0EAD7B,EAEKC,IAFL,CAEUC,QAAQ,IAAI;AACd,YAAME,OAAO,GAAGF,QAAQ,CAACC,IAAT,CAAcE,GAAd,CAAkBC,EAAE,IAAIA,EAAE,CAACC,KAA3B,CAAhB;AACArC,MAAAA,MAAM,CAACkC,OAAD,CAAN;AACH,KALL;AAMH,GAPQ,EAON,EAPM,CAAT;AAUAjD,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,QAAI0B,UAAU,KAAK,GAAnB,EAAwB;AACpB;AACH;;AACDlB,IAAAA,KAAK,CACAqC,GADL,CACgC,+DAA8DnB,UAAW,0BADzG,EAEKoB,IAFL,CAEUC,QAAQ,IAAI;AACd,YAAMM,SAAS,GAAGN,QAAQ,CAACC,IAAT,CAAcE,GAAd,CAAkBI,IAAI,IAAIA,IAAI,CAACC,IAA/B,CAAlB;AACAtC,MAAAA,SAAS,CAACoC,SAAD,CAAT;AACH,KALL;AAMH,GAXQ,EAWN,CAAC3B,UAAD,CAXM,CAAT;;AAaA,WAAS8B,cAAT,CAAwBC,KAAxB,EAA+D;AAC3D,UAAMN,EAAE,GAAGM,KAAK,CAACC,MAAN,CAAaC,KAAxB;AAEAhC,IAAAA,aAAa,CAACwB,EAAD,CAAb;AACH;;AAED,WAASS,gBAAT,CAA0BH,KAA1B,EAAiE;AAC7D,UAAMH,IAAI,GAAGG,KAAK,CAACC,MAAN,CAAaC,KAA1B;AAEA9B,IAAAA,eAAe,CAACyB,IAAD,CAAf;AACH;;AAED,WAASO,cAAT,CAAwBJ,KAAxB,EAAkD;AAC9C1B,IAAAA,mBAAmB,CAAC,CAAC0B,KAAK,CAACK,MAAN,CAAaC,GAAd,EAAmBN,KAAK,CAACK,MAAN,CAAaE,GAAhC,CAAD,CAAnB;AACH;;AAED,WAASC,iBAAT,CAA2BR,KAA3B,EAAiE;AAC7D,UAAM;AAAEnC,MAAAA,IAAF;AAAQqC,MAAAA;AAAR,QAAkBF,KAAK,CAACC,MAA9B,CAD6D,CAG7D;AACA;AACA;;AACArC,IAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAe,OAACE,IAAD,GAAQqC;AAAvB,KAAD,CAAX;AACH;;AAED,WAASO,gBAAT,CAA0BC,EAA1B,EAAsC;AAClC,UAAMC,eAAe,GAAGpC,aAAa,CAACqC,SAAd,CAAwBC,IAAI,IAAIA,IAAI,KAAKH,EAAzC,CAAxB,CADkC,CACoC;;AAEtE,QAAIC,eAAe,IAAI,CAAvB,EAA0B;AACtB,YAAMG,aAAa,GAAGvC,aAAa,CAACwC,MAAd,CAAqBF,IAAI,IAAIA,IAAI,KAAKH,EAAtC,CAAtB,CADsB,CAC2C;;AAEjElC,MAAAA,gBAAgB,CAACsC,aAAD,CAAhB;AACH,KAJD,MAIO;AACHtC,MAAAA,gBAAgB,CAAC,CAAC,GAAGD,aAAJ,EAAmBmC,EAAnB,CAAD,CAAhB;AACH;AACJ;;AAED,iBAAeM,YAAf,CAA4BhB,KAA5B,EAA8C;AAC1CA,IAAAA,KAAK,CAACiB,cAAN;AAGA,UAAM;AAAEpD,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA,QAAf;AAAyBC,MAAAA;AAAzB,QAAqCL,QAA3C;AACA,UAAM+B,EAAE,GAAGzB,UAAX;AACA,UAAM4B,IAAI,GAAG1B,YAAb;AACA,UAAM,CAACa,QAAD,EAAWC,SAAX,IAAwBZ,gBAA9B;AACA,UAAMlB,KAAK,GAAGoB,aAAd;AAEA,UAAMgB,IAAI,GAAG,IAAI2B,QAAJ,EAAb;AACA3B,IAAAA,IAAI,CAAC4B,MAAL,CAAY,MAAZ,EAAoBtD,IAApB;AACA0B,IAAAA,IAAI,CAAC4B,MAAL,CAAY,OAAZ,EAAqBrD,KAArB;AACAyB,IAAAA,IAAI,CAAC4B,MAAL,CAAY,UAAZ,EAAwBpD,QAAxB;AACAwB,IAAAA,IAAI,CAAC4B,MAAL,CAAY,SAAZ,EAAuBnD,OAAvB;AACAuB,IAAAA,IAAI,CAAC4B,MAAL,CAAY,IAAZ,EAAkBzB,EAAlB;AACAH,IAAAA,IAAI,CAAC4B,MAAL,CAAY,MAAZ,EAAoBtB,IAApB;AACAN,IAAAA,IAAI,CAAC4B,MAAL,CAAY,UAAZ,EAAwBC,MAAM,CAACpC,QAAD,CAA9B;AACAO,IAAAA,IAAI,CAAC4B,MAAL,CAAY,WAAZ,EAAyBC,MAAM,CAACnC,SAAD,CAA/B;AACAM,IAAAA,IAAI,CAAC4B,MAAL,CAAY,OAAZ,EAAqBhE,KAAK,CAACkE,IAAN,CAAW,GAAX,CAArB;AAGA,UAAMvE,GAAG,CAACwE,IAAJ,CAAS,QAAT,EAAmB/B,IAAnB,CAAN;AAEAgC,IAAAA,KAAK,CAAC,yBAAD,CAAL;AAEA5C,IAAAA,OAAO,CAAC6C,IAAR,CAAa,GAAb,EA1B0C,CA0BvB;AACtB;;AAED,sBACI;AAAK,IAAA,EAAE,EAAC,mBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAEC,IAAV;AAAgB,IAAA,GAAG,EAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,qBAFJ,CADJ,eASI;AAAM,IAAA,QAAQ,EAAET,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhB,qBADJ,eAGI,oBAAC,QAAD;AAAU,IAAA,cAAc,EAAEtC,eAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CADJ,eAKI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,EAAE,EAAC,MAHP;AAII,IAAA,QAAQ,EAAE8B,iBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CALJ,eAeI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,EAAE,EAAC,OAHP;AAII,IAAA,QAAQ,EAAEA,iBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,eAUI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,EAAE,EAAC,UAHP;AAII,IAAA,QAAQ,EAAEA,iBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAVJ,CAfJ,CALJ,eA0CI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAFJ,CADJ,eAMI,oBAAC,GAAD;AAAK,IAAA,MAAM,EAAE/C,eAAb;AAA8B,IAAA,IAAI,EAAE,EAApC;AAAwC,IAAA,OAAO,EAAE2C,cAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,WAAW,EAAC,2EADhB;AAEI,IAAA,GAAG,EAAC,oDAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAMI,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAE/B,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CANJ,eAeI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,SAFT;AAGI,IAAA,EAAE,EAAC,SAHP;AAII,IAAA,QAAQ,EAAEmC,iBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAfJ,eAyBI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AACI,IAAA,QAAQ,EAAET,cADd;AAEI,IAAA,KAAK,EAAE9B,UAFX;AAGI,IAAA,IAAI,EAAC,IAHT;AAII,IAAA,EAAE,EAAC,IAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANJ,EAOKZ,GAAG,CAACoC,GAAJ,CAASC,EAAD,iBACL;AACI,IAAA,GAAG,EAAEA,EADT;AAEI,IAAA,KAAK,EAAEA,EAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGKA,EAHL,CADH,CAPL,CAFJ,CADJ,eAmBI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,IAAA,QAAQ,EAAES,gBADd;AAEI,IAAA,KAAK,EAAEhC,YAFX;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,EAAE,EAAC,MAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BANJ,EAOKZ,MAAM,CAACkC,GAAP,CAAYI,IAAD,iBACR;AACI,IAAA,GAAG,EAAEA,IADT;AAEI,IAAA,KAAK,EAAEA,IAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGKA,IAHL,CADH,CAPL,CAFJ,CAnBJ,CAzBJ,CA1CJ,eA2GI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAFJ,CADJ,eAMI;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK1C,KAAK,CAACsC,GAAN,CAAUoB,IAAI,iBACX;AACI,IAAA,GAAG,EAAEA,IAAI,CAACH,EADd;AAEI,IAAA,OAAO,EAAE,MAAMD,gBAAgB,CAACI,IAAI,CAACH,EAAN,CAFnC;AAGI,IAAA,SAAS,EAAEnC,aAAa,CAACmD,QAAd,CAAuBb,IAAI,CAACH,EAA5B,IAAkC,UAAlC,GAA+C,EAH9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI;AAAK,IAAA,GAAG,EAAE5D,GAAG,CAAC6E,QAAJ,CAAaC,OAAb,GAAuBf,IAAI,CAACgB,SAAtC;AAAiD,IAAA,GAAG,EAAEhB,IAAI,CAACiB,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOjB,IAAI,CAACiB,KAAZ,CANJ,CADH,CADL,CANJ,CA3GJ,eA+HI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCA/HJ,CATJ,CADJ;AA+IH,CA9QD;;AAgRA,eAAe5E,WAAf","sourcesContent":["import React, { useEffect, useState, ChangeEvent, FormEvent } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Map, TileLayer, Marker } from 'react-leaflet';\nimport api from '../../services/api';\nimport axios from 'axios';\nimport { LeafletMouseEvent } from 'leaflet';\nimport Dropzone from '../../components/Dropzone';\n\nimport './styles.css';\nimport logo from '../../assets/logo.svg';\nimport { FiArrowLeft } from 'react-icons/fi';\n\ninterface Item {\n    id: number,\n    title: string,\n    image_url: string\n}\n\ninterface IBGE_Uf_Response {\n    sigla: string\n}\n\ninterface IBGE_City_Response {\n    nome: string\n}\n\nconst CreatePoint = () => {\n    //array ou objecto: manualmente informar o tipo da variável\n    const [itens, setItens] = useState<Item[]>([]);\n    const [ufs, setUfs] = useState<string[]>([]); //array de objetos\n    const [cities, setCities] = useState<string[]>([]);\n\n    const [initialPosition, setInitialPosition] = useState<[number, number]>([0, 0]);\n\n    const [formData, setFormData] = useState({\n        name: '',\n        email: '',\n        whatsapp: '',\n        address: '',\n    });\n\n    const [selectedUf, setSelectedUF] = useState<string>('0');\n    const [selectedCity, setSelectedCity] = useState<string>('0');\n    const [selectedPosition, setSelectedPosition] = useState<[number, number]>([0, 0]);\n    const [selectedItens, setSelectedItens] = useState<number[]>([]);\n    const [selectedFile, setSelectedFile] = useState<File>();\n\n    const history = useHistory();\n\n    useEffect(() => {\n        navigator.geolocation.getCurrentPosition((position => {\n            const { latitude, longitude } = position.coords;\n\n            setInitialPosition([latitude, longitude]);\n        }), () => setInitialPosition([-15.8259668, -47.9276436]), { timeout: 10000 })\n    }, []);\n\n    //quando o array [] está vazio, a função só é executada uma vez, não importa quantas vezes CreatePoint é chamado\n    useEffect(() => {\n        api.get('itens').then(response => {\n            setItens(response.data);\n        })\n    }, []);\n\n    useEffect(() => {\n        axios\n            .get<IBGE_Uf_Response[]>('https://servicodados.ibge.gov.br/api/v1/localidades/estados?orderBy=nome')\n            .then(response => {\n                const ufNames = response.data.map(uf => uf.sigla);\n                setUfs(ufNames);\n            })\n    }, []);\n\n\n    useEffect(() => {\n        //carrega as cidades sempre que a UF mudar\n        if (selectedUf === '0') {\n            return;\n        }\n        axios\n            .get<IBGE_City_Response[]>(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUf}/municipios?orderBy=nome`)\n            .then(response => {\n                const cityNames = response.data.map(city => city.nome);\n                setCities(cityNames);\n            })\n    }, [selectedUf]);\n\n    function handleSelectUf(event: ChangeEvent<HTMLSelectElement>) {\n        const uf = event.target.value;\n\n        setSelectedUF(uf);\n    }\n\n    function handleSelectCity(event: ChangeEvent<HTMLSelectElement>) {\n        const city = event.target.value;\n\n        setSelectedCity(city);\n    }\n\n    function handleMapClick(event: LeafletMouseEvent) {\n        setSelectedPosition([event.latlng.lat, event.latlng.lng]);\n    }\n\n    function handleInputChange(event: ChangeEvent<HTMLInputElement>) {\n        const { name, value } = event.target;\n\n        //colchete porque ai pode usar o nome de uma variável como propriedade, não com a variaável em si\n        //dessa forma copia todo o objeto e altera só o campo passado com o valor\n        //name pode ser whatsapp, address... por causa dos colchetes\n        setFormData({ ...formData, [name]: value });\n    }\n\n    function handleSelectItem(id: number) {\n        const alreadySelected = selectedItens.findIndex(item => item === id); //se encontrar retorna a posição, se não retorna -1\n\n        if (alreadySelected >= 0) {\n            const filteredItens = selectedItens.filter(item => item !== id); //pega todos menos o id\n\n            setSelectedItens(filteredItens);\n        } else {\n            setSelectedItens([...selectedItens, id]);\n        }\n    }\n\n    async function handleSubmit(event: FormEvent) {\n        event.preventDefault();\n\n\n        const { name, email, whatsapp, address } = formData;\n        const uf = selectedUf;\n        const city = selectedCity;\n        const [latitude, longitude] = selectedPosition;\n        const itens = selectedItens;\n\n        const data = new FormData\n        data.append('name', name);\n        data.append('email', email);\n        data.append('whatsapp', whatsapp);\n        data.append('address', address);\n        data.append('uf', uf);\n        data.append('city', city);\n        data.append('latitude', String(latitude));\n        data.append('longitude', String(longitude));\n        data.append('itens', itens.join(','));\n\n\n        await api.post('points', data);\n\n        alert('Ponto de coleta criado!');\n\n        history.push('/'); //volta pra home page\n    }\n\n    return (\n        <div id='page-create-point'>\n            <header>\n                <img src={logo} alt=\"Ecoleta\" />\n                <Link to={'/'} >\n                    <FiArrowLeft />\n                    Voltar para home\n                </Link>\n            </header>\n\n            <form onSubmit={handleSubmit}>\n                <h1>Cadastro do <br /> ponto de coleta</h1>\n\n                <Dropzone onFileUploaded={setSelectedFile} />\n\n                <fieldset>\n                    <legend>\n                        <h2>Dados</h2>\n                    </legend>\n\n                    <div className=\"field\">\n                        <label htmlFor=\"name\">Nome da entidade</label>\n                        <input\n                            type=\"text\"\n                            name=\"name\"\n                            id=\"name\"\n                            onChange={handleInputChange}\n                        />\n                    </div>\n\n                    <div className=\"field-group\">\n                        <div className=\"field\">\n                            <label htmlFor=\"email\">E-mail:</label>\n                            <input\n                                type=\"email\"\n                                name=\"email\"\n                                id=\"email\"\n                                onChange={handleInputChange}\n                            />\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"whatsapp\">Whatsapp</label>\n                            <input\n                                type=\"text\"\n                                name=\"whatsapp\"\n                                id=\"whatsapp\"\n                                onChange={handleInputChange}\n                            />\n                        </div>\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                    <legend>\n                        <h2>Endereços</h2>\n                        <span>Selecione o endereço no mapa</span>\n                    </legend>\n\n                    <Map center={initialPosition} zoom={11} onClick={handleMapClick}>\n                        <TileLayer\n                            attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                        />\n\n                        <Marker position={selectedPosition} />\n                    </Map>\n\n                    <div className=\"field\">\n                        <label htmlFor=\"address\">Endereço</label>\n                        <input\n                            type=\"text\"\n                            name='address'\n                            id='address'\n                            onChange={handleInputChange}\n                        />\n                    </div>\n\n                    <div className=\"field-group\">\n                        <div className=\"field\">\n                            <label htmlFor=\"uf\">Estado (UF)</label>\n                            <select\n                                onChange={handleSelectUf}\n                                value={selectedUf}\n                                name=\"uf\"\n                                id=\"uf\"\n                            >\n                                <option value=\"0\">Selecione uma UF</option>\n                                {ufs.map((uf) => (\n                                    <option\n                                        key={uf}\n                                        value={uf}>\n                                        {uf}\n                                    </option>\n                                ))}\n                            </select>\n                        </div>\n                        <div className=\"field\">\n                            <label htmlFor=\"city\">Cidade</label>\n                            <select\n                                onChange={handleSelectCity}\n                                value={selectedCity}\n                                name=\"city\"\n                                id=\"city\"\n                            >\n                                <option value=\"0\">Selecione a cidade</option>\n                                {cities.map((city) => (\n                                    <option\n                                        key={city}\n                                        value={city}>\n                                        {city}\n                                    </option>\n                                ))}\n                            </select>\n                        </div>\n                    </div>\n                </fieldset>\n\n                <fieldset>\n                    <legend>\n                        <h2>Ítens de coleta</h2>\n                        <span>Selecione um ou mais itens abaixo</span>\n                    </legend>\n\n                    <ul className=\"items-grid\">\n                        {itens.map(item => (\n                            <li\n                                key={item.id}\n                                onClick={() => handleSelectItem(item.id)}\n                                className={selectedItens.includes(item.id) ? 'selected' : ''}\n                            >\n                                <img src={api.defaults.baseURL + item.image_url} alt={item.title} />\n                                <span>{item.title}</span>\n                            </li>\n                        ))}\n                    </ul>\n                </fieldset>\n\n                <button type='submit'>\n                    Cadastrar ponto de coleta\n                </button>\n            </form>\n        </div>\n    )\n}\n\nexport default CreatePoint;"]},"metadata":{},"sourceType":"module"}